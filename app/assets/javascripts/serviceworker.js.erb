var CACHE_VERSION = 'v1';
var CACHE_NAME = ':sw-cache-' + CACHE_VERSION;

function onInstall(event) {
  console.log('[Serviceworker]', "Installing!", event);
  event.waitUntil(
    caches.open(CACHE_NAME).then(function prefill(cache) {
      console.log(cache);
      console.log("start caching >>>");
      return cache.addAll([

        // make sure serviceworker.js is not required by application.js
        // if you want to reference application.js from here
        // '<%#= asset_path "application.js" %>',
        '<%= asset_path "application.css" %>',
        '/',
        'manifest.json',
        '<%= image_path 'facebook_login.png' %>',
        '<%= image_path 'logo.png' %>',
        '<%= image_path 'logout.png' %>',
        '<%= image_path 'pic_1.jpg' %>',
        '<%= image_path 'pic_2.jpg' %>',
        '<%= image_path 'pic_3.jpg' %>',
        '<%= image_path 'pic_4.jpg' %>',
        '<%= image_path 'pic_5.jpg' %>',
        '<%= image_path 'pic_main.jpg' %>',
        '<%= image_path 'profile_cover.jpg' %>',
        '<%= image_path 'profile_img.jpg' %>',
        '<%= image_path 'story.png' %>',
        '<%= image_path 't_back.png' %>',
        '<%= image_path 't_fb.png' %>',
        '<%= image_path 't_setting.png' %>',
        '<%= image_path 't_share.png' %>',
        '<%= image_path 'tutor_cover.jpg' %>',
        '<%= image_path 'tutor_head.png' %>',
        '/offline.html',

      ]);
      console.log("end caching >>>");
    })
  );
}

function onActivate(event) {
  console.log('[Serviceworker]', "Activating!", event);
  event.waitUntil(

    caches.keys().then(function(keyList) {
       return Promise.all(keyList.map(function(key) {
         if (key !== CACHE_NAME) {
           console.log('[ServiceWorker] Removing old cache', key);
           return caches.delete(key);
         }
       }));
     })
    // caches.keys().then(function(cacheNames) {
    //   return Promise.all(
    //     cacheNames.filter(function(cacheName) {
    //       // Return true if you want to remove this cache,
    //       // but remember that caches are shared across
    //       // the whole origin
    //       return cacheName.indexOf(CACHE_VERSION) !== 0;
    //     }).map(function(cacheName) {
    //       return caches.delete(cacheName);
    //     })
    //   );
    // })
  );
  return self.clients.claim();
}

// Borrowed from https://github.com/TalAter/UpUp
function onFetch(event) {
  event.respondWith(
    // try to return untouched request from network first
    fetch(event.request).catch(function() {
      // if it fails, try to return request from the cache
      return caches.match(event.request).then(function(response) {
        if (response) {
          return response;
        }
        // if not found in cache, return default offline content for navigate requests
        if (event.request.mode === 'navigate' ||
          (event.request.method === 'GET' && event.request.headers.get('accept').includes('text/html'))) {
          console.log('[Serviceworker]', "Fetching offline content", event);
          return caches.match('/offline.html');
        }
      })
    })
  );
}

self.addEventListener('install', onInstall);
self.addEventListener('activate', onActivate);
self.addEventListener('fetch', onFetch);
